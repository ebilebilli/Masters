services:
  - type: web
    name: django-web
    env: docker
    plan: free # və ya starter/pro və s., ehtiyaca görə dəyişdirin
    dockerfilePath: ./Dockerfile
    dockerContext: .
    healthCheckPath: /health # Django tətbiqində sağlamlıq yoxlaması üçün endpoint (lazım gələrsə dəyişdirin)
    envVars:
      - key: POSTGRES_HOST
        fromDatabase:
          name: django-db
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: django-db
          property: port
      - key: POSTGRES_DB
        fromDatabase:
          name: django-db
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: django-db
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: django-db
          property: password
      - key: DEBUG
        value: "False" # və ya mühitə uyğun dəyər
      - key: SECRET_KEY
        sync: false # Həssas məlumat, Render dashboard-da təyin edin
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: django-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: django-redis
          property: connectionString
    startCommand: sh -c "python wait_for_db.py && python manage.py runserver 0.0.0.0:$PORT"

  - type: worker
    name: celery-worker
    env: docker
    plan: free # ehtiyaca görə dəyişdirin
    dockerfilePath: ./Dockerfile
    dockerContext: .
    envVars:
      - key: POSTGRES_HOST
        fromDatabase:
          name: django-db
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: django-db
          property: port
      - key: POSTGRES_DB
        fromDatabase:
          name: django-db
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: django-db
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: django-db
          property: password
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: django-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: django-redis
          property: connectionString
    startCommand: celery -A masters worker --loglevel=info

  - type: pserv
    name: elasticsearch
    env: docker
    plan: free # ehtiyaca görə dəyişdirin
    dockerCommand: docker run -p 9200:9200 -e "discovery.type=single-node" elasticsearch:8.13.4
    envVars:
      - key: DISCOVERY_TYPE
        value: single-node
      - key: XPACK_SECURITY_ENABLED
        value: "false" # və ya tələbə uyğun dəyər
      - key: BOOTSTRAP_MEMORY_LOCK
        value: "true"
      - key: ES_JAVA_OPTS
        value: "-Xms512m -Xmx512m" # resurslara uyğun tənzimləyin
    disk:
      name: esdata
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 10 # ehtiyaca uyğun tənzimləyin

databases:
  - name: django-db
    plan: free # və ya starter/pro
    databaseName: django_db
    user: django_user

redis:
  - name: django-redis
    plan: free # və ya starter/pro