# Generated by Django 5.2.1 on 2025-06-09 02:52

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='work_images/', verbose_name='İş şəkli')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sıra')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Yalnız Azərbaycan əlifbasındakı hərflərə icazə verilir.', regex='^[A-Za-zƏəÖöĞğÜüÇçŞşİı]+$')], verbose_name='Ad')),
                ('last_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Yalnız Azərbaycan əlifbasındakı hərflərə icazə verilir.', regex='^[A-Za-zƏəÖöĞğÜüÇçŞşİı]+$')], verbose_name='Soyad')),
                ('birth_date', models.DateField(help_text='Format: gün.ay.il (məsələn: 29.05.2025)', verbose_name='Doğum tarixi')),
                ('mobile_number', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(message='Mobil nömrə düzgün daxil edilməyib. 50 123 45 67 formatında daxil edin.', regex='^\\d{9}$')], verbose_name='Mobil nömrə')),
                ('gender', models.CharField(choices=[('MALE', 'Kişi'), ('FEMALE', 'Qadın')], max_length=6, verbose_name='Cins')),
                ('experience_years', models.PositiveIntegerField(verbose_name='İş təcrübəsi (il ilə)')),
                ('custom_profession', models.CharField(blank=True, max_length=100, null=True)),
                ('education', models.CharField(choices=[('0', 'Yoxdur'), ('1', 'Tam ali'), ('2', 'Natamam ali'), ('3', 'Orta'), ('4', 'Peşə təhsili'), ('5', 'Orta ixtisas təhsili')], max_length=20, verbose_name='Təhsil səviyyəsi')),
                ('education_speciality', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message='Yalnız Azərbaycan əlifbasındakı hərflərə icazə verilir.', regex='^[A-Za-zƏəÖöĞğÜüÇçŞşİı]+$')], verbose_name='Təhsil üzrə ixtisas')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Profil şəkli')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook linki')),
                ('instagram', models.URLField(blank=True, verbose_name='Instagram linki')),
                ('tiktok', models.URLField(blank=True, verbose_name='TikTok linki')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn linki')),
                ('note', models.TextField(blank=True, max_length=1500, verbose_name='Əlavə qeyd')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Yaradılma tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Son yenilənmə tarixi')),
                ('cities', models.ManyToManyField(related_name='city_masters', to='core.city', verbose_name='Şəhərlər')),
                ('districts', models.ManyToManyField(blank=True, related_name='district_masters', to='core.district')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('languages', models.ManyToManyField(to='core.language', verbose_name='Bildiyi dillər')),
                ('profession_area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category_masters', to='services.category')),
                ('profession_speciality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='profession_masters', to='services.service')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('work_images', models.ManyToManyField(blank=True, to='users.workimage', verbose_name='İşlərinə aid şəkillər')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
