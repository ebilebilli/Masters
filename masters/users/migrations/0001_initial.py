# Generated by Django 5.2.1 on 2025-05-28 21:12

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Yalnız Azərbaycan əlifbasındakı hərflərə icazə verilir.', regex='^[A-Za-zƏəÖöĞğÜüÇçŞşİı]+$')], verbose_name='Ad')),
                ('last_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Yalnız Azərbaycan əlifbasındakı hərflərə icazə verilir.', regex='^[A-Za-zƏəÖöĞğÜüÇçŞşİı]+$')], verbose_name='Soyad')),
                ('birth_date', models.DateField(help_text='Format: gün.ay.il (məsələn: 29.05.2025)', verbose_name='Doğum tarixi')),
                ('mobile_number', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(message='Mobil nömrə düzgün daxil edilməyib. 50 123 45 67 formatında daxil edin.', regex='^\\d{9}$')], verbose_name='Mobil nömrə')),
                ('gender', models.CharField(choices=[('K', 'Kişi'), ('Q', 'Qadın')], max_length=1, verbose_name='Cins')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
